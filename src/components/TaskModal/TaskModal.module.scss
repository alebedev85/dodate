.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 11;
}

.modalContent {
  position: relative;
  background: var(--calendar-day);
  padding: var(--spacing-lg);
  padding-top: var(--spacing-xl);
  border-radius: 8px;
  // max-width: 400px;
  width: 100%;
  text-align: left; /* Выравнивание по левому краю */
  
  width: auto; /* Пропорциональная ширина, на начальном этапе */
  height: auto; /* Изначально пропорциональная высота */
  max-width: 90%; /* Устанавливаем максимальную ширину */
  max-height: 90%; /* Устанавливаем максимальную высоту */
}

/* Стиль для вертикальной ориентации (портрет) */
@media (orientation: portrait) {
  .modalContent {
    width: 90vw;  /* 80% от ширины экрана для вертикальной ориентации */
    height: auto;  /* Высота будет зависеть от контента */
    max-height: 100vh;  /* Максимальная высота 80% от высоты экрана */
  }
}

/* Стиль для горизонтальной ориентации (пейзаж) */
@media (orientation: landscape) {
  .modalContent {
    width: auto;  /* Ширина будет зависеть от контента */
    height: 90vh;  /* 80% от высоты экрана для горизонтальной ориентации */
    max-width: 80vw;  /* Максимальная ширина 80% от ширины экрана */
  }
}

.closeButton {
  position: absolute;
  top: 15px;
  right: 15px;
  width: 30px;
  height: 30px;
  border: none;
  border-radius: 50%;
  font-size: 18px;
  color: var(--text-color);

  &:hover {
    background-color: var(--hover);
  }
}

.input,
.textarea {
  color: var(--text-color);
  background: var(--calendar-day);
  width: 100%;
  padding: 8px;
  margin-top: var(--spacing-sm);
  border: none;
  border-radius: 5px;
  font-size: 16px;
}

.titleInput {
  font-weight: bold;
  font-size: var(--font-size-md);
  text-align: center;
  display: block;
}

.textarea {
  resize: none;
  box-sizing: border-box;
  overflow: hidden;
  min-height: 40px;
  width: 100%;
}

.inputWrapper {
  display: flex;
  align-items: center;
  margin-bottom: 1px;
  width: 100%;
}

.label {
  font-size: var(--font-size-sm);
  color: var(--text-color);
}

.input {
  flex-grow: 1;
  margin: 0;
}

.titleInput {
  resize: none;
  overflow: hidden;
  width: 100%;
  font-size: 20px;
  font-weight: bold;
  border: none;
  background: transparent;
  outline: none;
  word-break: break-word;
  line-height: 1.2;
}

.controls {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin-top: var(--spacing-md);
}

.saveButton,
.counselButton {
  padding: var(--spacing-sm) var(--spacing-md);
  border: none;
  border-radius: 5px;
  font-size: var(--font-size-sm);
}

.saveButton {
  background: var(--save-button-color);
  color: white;
}

.counselButton {
  background: var(--cancel-button-color);
  color: white;
}

.disabled {
  background: var(--calendar-header);
  cursor: default;
  &:hover {
    background: var(--calendar-header);
    opacity: 1;
  }
}

.image {
  width: 100%;
  height: 320px;
  object-fit: cover;
  border-radius: 6px;
  margin-bottom: var(--spacing-sm);
}

.previewImage {
  width: 100%;
  height: 300px;
  object-fit: cover;
  margin-top: 8px;
  border-radius: 8px;
}

.customFileUpload {
  cursor: pointer;
  background-color: var(--primary-color);
  color: white;
  padding: var(--spacing-sm);
  text-align: center;
  border-radius: 5px;
  display: inline-block;
  font-size: var(--font-size-sm);
}

.customFileUpload input {
  display: none; /* Скрыть стандартный input */
}

.fileInput {
  display: none; /* Скрываем сам input, чтобы он не мешал кастомной кнопке */
}
